# =========================
# App
# =========================
spring.application.name=Proyecto
server.port=8080

# =========================
# Datasource (PostgreSQL en Docker)
# El hostname del servicio es "db" (como en docker-compose)
# =========================
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://db:5432/${POSTGRES_DB:appdb}?currentSchema=public
spring.datasource.username=${POSTGRES_USER:app}
spring.datasource.password=${POSTGRES_PASSWORD:app}

# Pool de conexiones (Hikari)
spring.datasource.hikari.pool-name=HikariCP
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.connection-timeout=30000

# =========================
# JPA / Hibernate
# Puedes sobreescribir con variables de entorno ya definidas en tu compose:
#  - SPRING_JPA_HIBERNATE_DDL_AUTO
#  - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT
# =========================
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.properties.hibernate.dialect=${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT:org.hibernate.dialect.PostgreSQLDialect}
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

# =========================
# Scripts SQL de inicio (opcional)
# Si tu app incluye schema/data en classpath:db/{schema,data}.sql
# =========================
spring.sql.init.mode=never
spring.sql.init.platform=postgres
spring.sql.init.encoding=UTF-8

# =========================
# Logging
# =========================
logging.level.org.springframework=INFO
logging.level.org.hibernate.SQL=INFO
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=INFO

